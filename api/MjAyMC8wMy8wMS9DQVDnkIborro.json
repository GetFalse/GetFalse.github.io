{"title":"CAP理论","date":"2020-03-01T20:01:11.000Z","date_formatted":{"ll":"Mar 1, 2020","L":"03/01/2020","MM-DD":"03-01"},"link":"2020/03/01/CAP理论","comments":true,"tags":["理论"],"categories":["分布式"],"updated":"2020-03-11T02:22:08.745Z","content":"<h2 id=\"什么是cap理论\">什么是CAP理论<a href=\"#什么是cap理论\" title=\"什么是CAP理论\"></a></h2><p>在理论计算机科学中，CAP理论指出，分布式数据存储（这里要注意是分布式储存）不可能同时提供以下三个保证中的两个以上：</p>\n<h3 id=\"分区容错性（partition-tolerance）\">分区容错性（Partition tolerance）<a href=\"#分区容错性（partition-tolerance）\" title=\"分区容错性（Partition tolerance）\"></a></h3><p>我觉得先讲P对于理解下面的CA会好一点。因为我觉得没有P就没有下面CA的问题。首先我们先拆开理解什么叫分区，什么叫容错性。</p>\n<ul><li><p>分区：就是在一个分布式系统里面，节点组成的网络本来应该是连通的，然而可能因为一些故障，使得有些节点之间不连通了，整个网络就分成了几块区域，数据就散布在了这些不连通的区域中。</p></li><li><p>容错性：当你一个数据项只在一个节点中保存，那么分区出现后，和这个节点不连通的部分就访问不到这个数据了，这时分区就没有容错性。提高分区容错性的办法就是一个数据项复制到多个节点上，那么出现分区之后，这一数据项就可能分布到各个区里，就有了容错性。</p></li></ul><p>所以结合起来分区容错性，就是有联系的多个节点之间断开了，且都保存同一份数据 ，而且两个分区的节点都还要是正常运行的。</p>\n<h3 id=\"一致性（consistency）\">一致性（Consistency）<a href=\"#一致性（consistency）\" title=\"一致性（Consistency）\"></a></h3><p>首先注意该一致性与ACID 数据库事务中保证的一致性完全不同。上面我对P的讲解的，就好理解了一致性就是所有节点在同一时间的数据完全一致。比如两个节点node1，node2，他们都有同一个变量a=0，当我修改node1数据a=1后，访问node2也返回的a=1。一致性又分为两类：</p>\n<ul><li><p>强一致性：复制数据是同步的。</p></li><li><p>弱一致性：复制数据是异步的。</p></li></ul><p>这里一致性指的是强一致性。</p>\n<h3 id=\"可用性（availability）\">可用性（Availability）<a href=\"#可用性（availability）\" title=\"可用性（Availability）\"></a></h3><p>首先强调一下我们日常谈论到的“高可用性“是指停机时间，比如99.999%就是说我全年只停机365x24x60x(1-0.99999)=5.256分钟，这个”高可用性“和这里的可用性完全不是同一个概念。CAP中的A指的是系统中无故障的[数据库]节点收到的每个请求都必须产生[无错误]响应”。</p>\n<h2 id=\"如何理解cap定理只能满足两项\">如何理解CAP定理只能满足两项<a href=\"#如何理解cap定理只能满足两项\" title=\"如何理解CAP定理只能满足两项\"></a></h2><p>分布式存储中，是不可能保证网络不出问题的，所以P是肯定满足的。如下图，G1和G2是两个节点，两个都维护这一个数据v0。</p>\n<p><img src=\"https://resource.bugbak.com//hEWQrQ80O4UD1VLuaMrpE75sdRm9U8Q6CiIVsrPs.png\" class=\"φcy\"></p>\n<p>这个时候client修改v0为v1。</p>\n<ul><li><p>保证一致性，这个时候G1就应该把V1同步给G2，可是他们之间网络出问题了，传不过去，这个时候怎么办？报错，不给处理，违背了可用性。</p></li><li><p>保证可用性，这个是时候G1只把自己的数据修改为V1了，没管G2，返回正常。这个时候client再去访问G2返回的是v0，很明显数据不一致了，违背了一致性。</p></li></ul><p>所以由上面的例子分布式CAP只能满足两项，要么CP，要么AP。</p>\n<h2 id=\"参考\">参考<a href=\"#参考\" title=\"参考\"></a></h2><p><a href=\"https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/\" target=\"_blank\">https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/</a>    </p>\n<p><a href=\"https://www.zhihu.com/question/54105974\" target=\"_blank\">https://www.zhihu.com/question/54105974</a></p>\n<p><a href=\"https://dzone.com/articles/understanding-the-cap-theorem\" target=\"_blank\">https://dzone.com/articles/understanding-the-cap-theorem</a></p>\n","prev":{"title":"SpringCloudGateway","link":"2020/03/06/SpringCloudGateway"},"next":{"title":".gitignore语法规范","link":"2020/02/28/gitignore语法规范"},"plink":"https://blog.bugbak.com/2020/03/01/CAP理论/","toc":[{"id":"什么是cap理论","title":"什么是CAP理论","index":"1","children":[{"id":"分区容错性（partition-tolerance）","title":"分区容错性（Partition tolerance）","index":"1.1"},{"id":"一致性（consistency）","title":"一致性（Consistency）","index":"1.2"},{"id":"可用性（availability）","title":"可用性（Availability）","index":"1.3"}]},{"id":"如何理解cap定理只能满足两项","title":"如何理解CAP定理只能满足两项","index":"2"},{"id":"参考","title":"参考","index":"3"}],"reward":true,"copyright":{"author":"Dz","link":"<a href=\"https://blog.bugbak.com/2020/03/01/CAP理论/\" title=\"CAP理论\">https://blog.bugbak.com/2020/03/01/CAP理论/</a>","license":"本博客所有文章除特别声明外，均采用(<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"nofollow\" target=\"_blank\">CC BY-NC-SA 4.0</a>)许可协议，转载请注明来源<a href=\"https://blog.bugbak.com\" rel=\"nofollow\" target=\"_blank\">BugBak</a>"}}