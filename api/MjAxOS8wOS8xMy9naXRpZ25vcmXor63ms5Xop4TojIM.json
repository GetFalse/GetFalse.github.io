{"title":".gitignore语法规范","date":"2019-09-13T20:47:12.000Z","date_formatted":{"ll":"Sep 13, 2019","L":"09/13/2019","MM-DD":"09-13"},"link":"2019/09/13/gitignore语法规范","comments":true,"tags":["git"],"categories":["配置"],"updated":"2020-03-06T06:57:18.932Z","content":"<h2 id=\"gitignore为何物？\">.gitignore为何物？<a href=\"#gitignore为何物？\" title=\".gitignore为何物？\"></a></h2><p>从名字就可以看出来，就是在git里面忽略一些文件，比如：idea打开项目后的.idea文件。这些文件没有必要上传到git仓库，而且每个人idea的配置可能还不一样，pull下来别人的配置还可能会导致一些谜之问题。这时候聪明的同学肯定就会说，把不需要的文件不add到git中不就可以了吗？没错，让git不去管理这些文件的确是可以的，但人都会犯错，不保证每个人都不会将这些文件提交上去，但是被gitignore忽视的这些文件，是永远都提交不上去的，就可以化解人为的操作失误。</p>\n<h2 id=\"如何使用gitignore\">如何使用.gitignore<a href=\"#如何使用gitignore\" title=\"如何使用.gitignore\"></a></h2><p>在项目的根目录里面也就是.git文件夹的同级目录下创建一个.gitignore文件，看不见.git文件夹的，打开显示隐藏文件夹。注意.gitignore这个名字已经包括了名称和后缀，千万别创建了一个.gitignore.txt文件。创建好之后我们按照官方给定的语法进行配置，就可以指定忽略哪些文件或文件夹。</p>\n<h3 id=\"gitignore语法\">.gitignore语法<a href=\"#gitignore语法\" title=\".gitignore语法\"></a></h3><ol><li>空行或是以 # 开头的行即注释行将被忽略。</li><li>可以在前面添加 正斜杠/ 来避免递归,下面的例子中可以很明白的看出来与下一条的区别。</li><li>可以在后面添加 正斜杠/ 来忽略文件夹，例如 build/ 即忽略 build 文件夹，/doc/build/ 这样的目录也会忽略。</li><li>可以使用 ! 来否定忽略，即比如在前面用了*.apk，然后使用!a.apk，则这个a.apk不会被忽略。</li><li>用 * 来匹配零个或多个字符，如*.[oa]忽略所有以”.o”或”.a”结尾；</li><li>[] 用来匹配括号内的任一字符，如 [abc]，也可以在括号内加连接符，如 [0-9] 匹配0至9的数；</li><li>? 用来匹配单个字符。</li></ol><h3 id=\"ignore文件示例\">.ignore文件示例<a href=\"#ignore文件示例\" title=\".ignore文件示例\"></a></h3><p>文字都是苍白的，下来我们来实操一波，以下都是我实测说得，如有纰漏，欢迎评论指出！</p>\n<p>注：<br>下图中黄色是被git忽略的</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 忽略所有.txt后缀的文件（太简单没图）</span></span><br><span class=\"line\">*.txt</span><br><span class=\"line\"><span class=\"comment\"># 如果想让a.txt不被忽略，可以加上！注意：顺序和上面颠倒会失效（太简单没图）</span></span><br><span class=\"line\">!a.txt</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#忽略所有doc文件夹里面所有，不管doc是否为一级二级，这里的一级指的是和.gitignore同级，这两个效果一致</span></span><br><span class=\"line\">doc</span><br><span class=\"line\">doc/</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://resource.bugbak.com//GE0C9WYMv3QedcDZEDoTVa6HqkskuZvvwWsqgahr.jpg\" class=\"φcy\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 忽略doc文件夹下所有，不包括/dom/doc，也就是它作为一级目录下递归所有</span></span><br><span class=\"line\">/doc</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://resource.bugbak.com/N8HNOXiGbjyw5kZk9GlE0Z0nNIq74O1ZGCy8c3eg.jpg\" class=\"φcy\" alt=\"2020-03-06_141601\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 忽略doc作为一级目录下的，不包括/dom/doc/a.txt,不包括子目录/doc/img/a.txt</span></span><br><span class=\"line\">doc/*.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://resource.bugbak.com/Ze2MrPLrildPN9BB62kpO24uqByNaMDqpn8DXzIB.jpg\" class=\"φcy\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 忽略doc作为一级目录下的，二级目录里面的txt文件，不包括第三级目录，额。。。懵逼了，还是看图吧，一图胜千言</span></span><br><span class=\"line\">doc/*/*.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://resource.bugbak.com/0M7K4p931iV28ypGSeUCJ28V6ZWagpHCaW7GJO3f.jpg\" class=\"φcy\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 忽略doc作为一级目录下的.txt文件</span></span><br><span class=\"line\">doc/**/*.txt</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://resource.bugbak.com/6oKJqbbo1Uks4vmyLASSk4rEdWCiR0iQRE2vRNhP.jpg\" class=\"φcy\"></p>\n<h2 id=\"补充说明\">补充说明<a href=\"#补充说明\" title=\"补充说明\"></a></h2><p>使用idea开发项目的小伙伴可以下载插件.ignore，被忽略的文件或者文件夹会改变颜色。这样就可以很轻松的辨别自己的配置是否成功。</p>\n","plink":"https://blog.bugbak.com/2019/09/13/gitignore语法规范/","toc":[{"id":"gitignore为何物？","title":".gitignore为何物？","index":"1"},{"id":"如何使用gitignore","title":"如何使用.gitignore","index":"2","children":[{"id":"gitignore语法","title":".gitignore语法","index":"2.1"},{"id":"ignore文件示例","title":".ignore文件示例","index":"2.2"}]},{"id":"补充说明","title":"补充说明","index":"3"}],"reward":true,"copyright":{"author":"Dz","link":"<a href=\"https://blog.bugbak.com/2019/09/13/gitignore语法规范/\" title=\".gitignore语法规范\">https://blog.bugbak.com/2019/09/13/gitignore语法规范/</a>","license":"本博客所有文章除特别声明外，均采用(<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"nofollow\" target=\"_blank\">CC BY-NC-SA 4.0</a>)许可协议，转载请注明来源<a href=\"https://blog.bugbak.com\" rel=\"nofollow\" target=\"_blank\">BugBak</a>"}}