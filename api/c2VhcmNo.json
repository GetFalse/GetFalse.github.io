[{"title":".gitignore语法规范","date":"2019-09-13T20:47:12.000Z","date_formatted":{"ll":"Sep 13, 2019","L":"09/13/2019","MM-DD":"09-13"},"updated":"2020-03-06T06:57:18.932Z","content":".gitignore为何物？从名字就可以看出来，就是在git里面忽略一些文件，比如：idea打开项目后的.idea文件。这些文件没有必要上传到git仓库，而且每个人idea的配置可能还不一样，pull下来别人的配置还可能会导致一些谜之问题。这时候聪明的同学肯定就会说，把不需要的文件不add到git中不就可以了吗？没错，让git不去管理这些文件的确是可以的，但人都会犯错，不保证每个人都不会将这些文件提交上去，但是被gitignore忽视的这些文件，是永远都提交不上去的，就可以化解人为的操作失误。\n如何使用.gitignore在项目的根目录里面也就是.git文件夹的同级目录下创建一个.gitignore文件，看不见.git文件夹的，打开显示隐藏文件夹。注意.gitignore这个名字已经包括了名称和后缀，千万别创建了一个.gitignore.txt文件。创建好之后我们按照官方给定的语法进行配置，就可以指定忽略哪些文件或文件夹。\n.gitignore语法空行或是以 # 开头的行即注释行将被忽略。可以在前面添加 正斜杠/ 来避免递归,下面的例子中可以很明白的看出来与下一条的区别。可以在后面添加 正斜杠/ 来忽略文件夹，例如 build/ 即忽略 build 文件夹，/doc/build/ 这样的目录也会忽略。可以使用 ! 来否定忽略，即比如在前面用了*.apk，然后使用!a.apk，则这个a.apk不会被忽略。用 * 来匹配零个或多个字符，如*.[oa]忽略所有以”.o”或”.a”结尾；[] 用来匹配括号内的任一字符，如 [abc]，也可以在括号内加连接符，如 [0-9] 匹配0至9的数；? 用来匹配单个字符。.ignore文件示例文字都是苍白的，下来我们来实操一波，以下都是我实测说得，如有纰漏，欢迎评论指出！\n注：下图中黄色是被git忽略的\n1234# 忽略所有.txt后缀的文件（太简单没图）*.txt# 如果想让a.txt不被忽略，可以加上！注意：顺序和上面颠倒会失效（太简单没图）!a.txt\n\n123#忽略所有doc文件夹里面所有，不管doc是否为一级二级，这里的一级指的是和.gitignore同级，这两个效果一致docdoc/\n\n\n12# 忽略doc文件夹下所有，不包括/dom/doc，也就是它作为一级目录下递归所有/doc\n\n\n12# 忽略doc作为一级目录下的，不包括/dom/doc/a.txt,不包括子目录/doc/img/a.txtdoc/*.txt\n\n\n12# 忽略doc作为一级目录下的，二级目录里面的txt文件，不包括第三级目录，额。。。懵逼了，还是看图吧，一图胜千言doc/*/*.txt\n\n\n12# 忽略doc作为一级目录下的.txt文件doc/**/*.txt\n\n\n补充说明使用idea开发项目的小伙伴可以下载插件.ignore，被忽略的文件或者文件夹会改变颜色。这样就可以很轻松的辨别自己的配置是否成功。\n","plink":"https://blog.bugbak.com/2019/09/13/gitignore语法规范/"},{"title":"About Me","date":"2019-07-20T09:43:19.000Z","date_formatted":{"ll":"Jul 20, 2019","L":"07/20/2019","MM-DD":"07-20"},"updated":"2020-03-05T11:23:20.968Z","content":"首先告诉你一个不幸的消息，你将会在这个页面失去1分钟的青春。但是！莫慌~通过阅读鄙人的blog你可以节省至少X小时的青春嗯 ？ X？？你细品~有人可能会问鄙人为什么决定写blog？问的好！鄙人在互联网搬砖也有些年头了最明显的不是肌肉变发达了而是头发少了咳咳~是记忆力消退没错东西写出来肯定就不会丢了啊这时候肯定就有狼人跳出来指着我的鼻子说数据库炸了不久丢了吗？说的好，所以我。。。一拳打爆你的狗头哦~开个玩笑~最后如果我的输出能让大家有所收获那可真是令人开心哦~哈哈哈哈哈~\n","plink":"https://blog.bugbak.com/about/me/"}]