{"title":"SpringGateway-RateLimiter","date":"2020-03-09T20:01:11.000Z","date_formatted":{"ll":"Mar 9, 2020","L":"03/09/2020","MM-DD":"03-09"},"link":"2020/03/09/SpringCloudGateway-RateLimiter","comments":true,"tags":["Gateway","RateLimiter"],"categories":["SpringCloud"],"updated":"2020-03-11T02:30:18.917Z","content":"<h1 id=\"接入ratelimiter\">接入RateLimiter<a href=\"#接入ratelimiter\" title=\"接入RateLimiter\"></a></h1><p>此篇承接之前的博文<a href=\"https://blog.bugbak.com/2020/03/06/SpringCloudGateway\" target=\"_blank\">SpringCloudGateway</a>，建议从SpringCloud-Gateway看起。限流是基于令牌桶算法和Redis实现的。</p>\n<h2 id=\"核心参数\">核心参数<a href=\"#核心参数\" title=\"核心参数\"></a></h2><p>这里解释几个核心参数。</p>\n<p><code>redis-rate-limiter.replenishRate</code>：表示令牌的添加速率</p>\n<p><code>redis-rate-limiter.burstCapacity</code>：表示桶的容积，设成0表示拒绝所以请求（官方文档是这样说的，但是我设置成0，启动报错提示：最小不能小于1，这里我只能呵呵。。。）</p>\n<p><code>redis-rate-limiter.requestedTokens</code>：表示一个请求过了拿多少个令牌，默认是一个。</p>\n<p><code>key-resolver</code>：这个实现接口KeyResolver的类，用于解析出限流的关键字，比如host，url。它使用 SpEL 表达式根据<code>#{@beanName}</code>从 Spring 容器中获取 Bean 对象。</p>\n<h2 id=\"示例代码\">示例代码<a href=\"#示例代码\" title=\"示例代码\"></a></h2><p>首先我们先引入redis包，注意并不是只需要这个包，这是承接上一篇的Gateway，建议先看SpringCloudGateway。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-data-redis-reactive<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>application.yml中配置如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">redis:</span></span><br><span class=\"line\">    <span class=\"attr\">database:</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"attr\">host:</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"number\">6379</span></span><br><span class=\"line\">    <span class=\"comment\"># 有密码填密码，没有密码不填</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"number\">123456</span></span><br><span class=\"line\">    <span class=\"comment\"># 连接超时时间（ms)</span></span><br><span class=\"line\">    <span class=\"attr\">timeout:</span> <span class=\"string\">1000ms</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">gateway:</span></span><br><span class=\"line\">      <span class=\"attr\">routes:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">id:</span> <span class=\"string\">route</span></span><br><span class=\"line\">          <span class=\"attr\">uri:</span> <span class=\"string\">http://httpbin.org</span></span><br><span class=\"line\">          <span class=\"attr\">filters:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">RequestRateLimiter</span></span><br><span class=\"line\">              <span class=\"attr\">args:</span></span><br><span class=\"line\">              \t<span class=\"comment\">#获取自定义的KeyResolver实现类</span></span><br><span class=\"line\">                <span class=\"attr\">key-resolver:</span> <span class=\"string\">\"#&#123;@userKeyResolver&#125;\"</span></span><br><span class=\"line\">                <span class=\"comment\">#每秒钟均匀放入10个令牌，也就是100ms放一个令牌</span></span><br><span class=\"line\">                <span class=\"attr\">redis-rate-limiter.replenishRate:</span> <span class=\"number\">10</span></span><br><span class=\"line\">                <span class=\"comment\">#令牌桶容积10</span></span><br><span class=\"line\">                <span class=\"attr\">redis-rate-limiter.burstCapacity:</span> <span class=\"number\">10</span></span><br><span class=\"line\">                <span class=\"comment\">#每个请求获取一个令牌</span></span><br><span class=\"line\">                <span class=\"attr\">redis-rate-limiter.requestedTokens:</span> <span class=\"number\">1</span></span><br><span class=\"line\">          <span class=\"attr\">predicates:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">Path=/get</span></span><br></pre></td></tr></table></figure>\n\n<p>启动类中添加userkeyResolver类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.bugbak.gateway;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.cloud.gateway.filter.ratelimit.KeyResolver;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> reactor.core.publisher.Mono;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GatewayApplication</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SpringApplication.run(GayutewayApplication<span class=\"class\">.<span class=\"keyword\">class</span>, <span class=\"title\">args</span>)</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\">KeyResolver <span class=\"title\">userKeyResolver</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//获取请求中的请求参数user</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> exchange -&gt; Mono.just(exchange.getRequest().getQueryParams().getFirst(<span class=\"string\">\"user\"</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">//      根据uri的路径限流，给大家参考</span></span><br><span class=\"line\"><span class=\"comment\">//       public class UriKeyResolver  implements KeyResolver &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//            @Override</span></span><br><span class=\"line\"><span class=\"comment\">//            public Mono&lt;String&gt; resolve(ServerWebExchange exchange) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//                return Mono.just(exchange.getRequest().getURI().getPath());</span></span><br><span class=\"line\"><span class=\"comment\">//            &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//        @Bean</span></span><br><span class=\"line\"><span class=\"comment\">//        public UriKeyResolver uriKeyResolver() &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//            return new UriKeyResolver();</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>欧克，即使这么简单，已经配置好了。</p>\n<h1 id=\"测试限流\">测试限流<a href=\"#测试限流\" title=\"测试限流\"></a></h1><h2 id=\"测试没有key\">测试没有key<a href=\"#测试没有key\" title=\"测试没有key\"></a></h2><p>首先我们测试一下请求中没有user参数<a href=\"http://localhost:8080/get\" target=\"_blank\">http://localhost:8080/get</a>, 页面显示</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Whitelabel Error Page</span><br><span class=\"line\">This application has no configured error view, so you are seeing this as a fallback.</span><br><span class=\"line\"></span><br><span class=\"line\">Tue Mar 10 11:44:00 CST 2020</span><br><span class=\"line\">[27f020a1] There was an unexpected error (type=Internal Server Error, status=500).</span><br><span class=\"line\">value</span><br></pre></td></tr></table></figure>\n\n<p>控制台报错</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">2020</span>-<span class=\"number\">03</span>-<span class=\"number\">10</span> <span class=\"number\">11</span>:<span class=\"number\">44</span>:<span class=\"number\">00.148</span> ERROR <span class=\"number\">6248</span> --- [ctor-http-nio-<span class=\"number\">3</span>] a.w.r.e.AbstractErrorWebExceptionHandler : [<span class=\"number\">27f</span>020a1] <span class=\"number\">500</span> Server Error <span class=\"keyword\">for</span> HTTP GET <span class=\"string\">\"/get\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">java.lang.NullPointerException: value</span><br><span class=\"line\">\tat java.util.Objects.requireNonNull(Objects.java:<span class=\"number\">228</span>) ~[na:<span class=\"number\">1.8</span><span class=\"number\">.0_162</span>]</span><br><span class=\"line\">\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: </span><br><span class=\"line\"><span class=\"function\">Error has been observed at the following <span class=\"title\">site</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\"><span class=\"function\">\t|_ checkpoint ⇢ org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter [DefaultWebFilterChain]</span></span><br><span class=\"line\"><span class=\"function\">\t|_ checkpoint ⇢ HTTP GET \"/get\" [ExceptionHandlingWebHandler]</span></span><br><span class=\"line\"><span class=\"function\">Stack trace:</span></span><br><span class=\"line\"><span class=\"function\">\t\tat java.util.Objects.<span class=\"title\">requireNonNull</span><span class=\"params\">(Objects.java:<span class=\"number\">228</span>)</span> ~[na:1.8.0_162]</span></span><br><span class=\"line\"><span class=\"function\">\t\tat reactor.core.publisher.MonoJust.&lt;init&gt;<span class=\"params\">(MonoJust.java:<span class=\"number\">34</span>)</span> ~[reactor-core-3.3.0.RELEASE.jar:3.3.0.RELEASE]</span></span><br><span class=\"line\"><span class=\"function\">\t\tat reactor.core.publisher.Mono.<span class=\"title\">just</span><span class=\"params\">(Mono.java:<span class=\"number\">560</span>)</span> ~[reactor-core-3.3.0.RELEASE.jar:3.3.0.RELEASE]</span></span><br><span class=\"line\"><span class=\"function\">\t\tat com.bugbak.gateway.GatewayApplication.lambda$userKeyResolver$0<span class=\"params\">(GatewayApplication.java:<span class=\"number\">18</span>)</span> ~[classes/:na]</span></span><br></pre></td></tr></table></figure>\n\n<p>我先以为这是正常现象，就是这样被拦截了啊，但是后来发现是自己脑子瓦特了，任何报错都是有问题的，排除后修改如下</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\">  <span class=\"function\">KeyResolver <span class=\"title\">userKeyResolver</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">//这里要处理为null的情况</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> exchange -&gt; Mono.justOrEmpty(exchange.getRequest().getQueryParams().getFirst(<span class=\"string\">\"user\"</span>));</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>访问<a href=\"http://localhost:8080/get，正常显示，页面上是HTTP\" target=\"_blank\">http://localhost:8080/get，正常显示，页面上是HTTP</a> ERROR 403。</p>\n<h2 id=\"测试有key\">测试有key<a href=\"#测试有key\" title=\"测试有key\"></a></h2><p>接下来我们使用Jmeter测试一下令牌的拿取，我们使用11个线程，同时执行<a href=\"http://localhost:8080/get?user=aa，猜想应该有一个没有获取到令牌。测试结果如下：\" target=\"_blank\">http://localhost:8080/get?user=aa，猜想应该有一个没有获取到令牌。测试结果如下：</a></p>\n<p><img src=\"https://resource.bugbak.com//B9TKNuC07zRt0yA5OGVobuRE8B9cZztu15es7GhR.jpg\" class=\"φcy\"></p>\n<p>和预期一样，有一个访问失败，响应码是HTTP 429 - Too Many Requests。</p>\n<h2 id=\"其他测试\">其他测试<a href=\"#其他测试\" title=\"其他测试\"></a></h2><p>如果我们想修改是否拦截empty-key，以及拦截后的返回的状态码，可以参考下面配置</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">gateway:</span></span><br><span class=\"line\">      <span class=\"attr\">filter:</span></span><br><span class=\"line\">        <span class=\"attr\">request-rate-limiter:</span></span><br><span class=\"line\">          <span class=\"comment\">#是否拦截空key，就是上面的userkeyResolver有没有解析到key，没有就是空key，默认值true拦截。</span></span><br><span class=\"line\">          <span class=\"comment\">#这里我改成false，我测试的结果是没有user参数不进行限流，存在user参数则走限流策略</span></span><br><span class=\"line\">          <span class=\"attr\">deny-empty-key:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">          <span class=\"comment\">#拦截空key后，返回的code码，前提是上面拦截为true才生效</span></span><br><span class=\"line\">          <span class=\"attr\">empty-key-status-code:</span> <span class=\"number\">404</span></span><br></pre></td></tr></table></figure>\n\n<p>最后我测试了一下，如果redis挂掉了，限流器会不会拒绝所有请求，答案是不会。redis挂了后将不进行限流，这也好理解，不能因为redis影响正常服务。</p>\n<h1 id=\"最后\">最后<a href=\"#最后\" title=\"最后\"></a></h1><p>另外还一个lua脚本request_rate_limiter.lua，在gateway包中就有，这也是实现限流的一个核心脚本，有兴趣的可以看看。</p>\n<h1 id=\"参考\">参考<a href=\"#参考\" title=\"参考\"></a></h1><p><a href=\"https://cloud.spring.io/spring-cloud-gateway/reference/html/#the-redis-ratelimiter\" target=\"_blank\">https://cloud.spring.io/spring-cloud-gateway/reference/html/#the-redis-ratelimiter</a></p>\n","prev":{"title":"SpringCloudGateway-Hystrix","link":"2020/03/10/SpringCloudGateway-Hystrix"},"next":{"title":"SpringCloudGateway","link":"2020/03/06/SpringCloudGateway"},"plink":"https://blog.bugbak.com/2020/03/09/SpringCloudGateway-RateLimiter/","toc":[{"id":"接入ratelimiter","title":"接入RateLimiter","index":"1","children":[{"id":"核心参数","title":"核心参数","index":"1.1"},{"id":"示例代码","title":"示例代码","index":"1.2"}]},{"id":"测试限流","title":"测试限流","index":"2","children":[{"id":"测试没有key","title":"测试没有key","index":"2.1"},{"id":"测试有key","title":"测试有key","index":"2.2"},{"id":"其他测试","title":"其他测试","index":"2.3"}]},{"id":"最后","title":"最后","index":"3"},{"id":"参考","title":"参考","index":"4"}],"reward":true,"copyright":{"author":"Dz","link":"<a href=\"https://blog.bugbak.com/2020/03/09/SpringCloudGateway-RateLimiter/\" title=\"SpringGateway-RateLimiter\">https://blog.bugbak.com/2020/03/09/SpringCloudGateway-RateLimiter/</a>","license":"本博客所有文章除特别声明外，均采用(<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"nofollow\" target=\"_blank\">CC BY-NC-SA 4.0</a>)许可协议，转载请注明来源<a href=\"https://blog.bugbak.com\" rel=\"nofollow\" target=\"_blank\">BugBak</a>"}}